@page "/Articulo"
@using System.Collections.Generic
@using System.Threading.Tasks
@using Services
@inject ServicioEntidad servicioEntidad
@inject NavigationManager navegacionManager

<div class="container-xl">
   <div class="table-responsive">
       <div class="table-wrapper">
           <div class="table-title">
               <div class="row">
                   <div class="col-sm-6">
                       <h2>Administrar <b>Artículos</b></h2>
                   </div>
                   <div class="col-sm-6">
                       <button class="btn btn-info btn-sm" @onclick="() => mostrarModalConsulta = true">
                           <i class="material-icons">&#xE8B6;</i> <span>Consultar</span>
                       </button>

                       <button class="btn btn-success btn-sm" @onclick="AbrirModalGuardar">
                           <i class="material-icons">&#xE147;</i> <span>Agregar</span>
                       </button>
                   </div>
               </div>
           </div>

           @if (cargando)
           {
               <p><em>Cargando...</em></p>
           }
           else if (articulos == null || articulos.Count == 0)
           {
               <p>No hay Artículos disponibles.</p>
           }
           else
           {
               <table class="table table-striped table-hover">
                   <thead>
                       <tr>
                           <th>ID</th>
                           <th>Nombre</th>
                           <th>Descripción</th>
                           <th>ID Sección</th>
                           <th>ID Subsección</th>
                       </tr>
                   </thead>
                   <tbody>
                       @foreach (var articulo in articulos)
                       {
                           <tr>
                               <td>@ObtenerValor(articulo, "id")</td>
                               <td>@ObtenerValor(articulo, "nombre")</td>
                               <td>@ObtenerValor(articulo, "descripcion")</td>
                               <td>@ObtenerValor(articulo, "fkidseccion")</td>
                               <td>@ObtenerValor(articulo, "fkidsubseccion")</td>
                           </tr>
                       }
                   </tbody>
               </table>
           }
       </div>
   </div>
</div>

@if (mostrarModalGuardar)
{
  <div class="modal fade show d-block" style="background: rgba(0, 0, 0, 0.5);">
   <div class="modal-dialog">
       <div class="modal-content">
           <form @onsubmit="GuardarArticulo">
               <div class="modal-header">
                   <h4 class="modal-title">Agregar Artículo</h4>
                   <button type="button" class="close" @onclick="CerrarModalGuardar">&times;</button>
               </div>
               <div class="modal-body">
                   <div class="form-group">
                       <label>ID</label>
                       <input type="text" class="form-control" @bind="idArticulo" required maxlength="20">
                   </div>
                   <div class="form-group">
                       <label>Nombre</label>
                       <input type="text" class="form-control" @bind="nombreArticulo" required maxlength="1000">
                   </div>
                   <div class="form-group">
                       <label>Descripción</label>
                       <textarea class="form-control" rows="4" @bind="descripcionArticulo" required maxlength="4000"></textarea>
                   </div>
                   <div class="form-group">
                       <label>Sección</label>
                       <select class="form-control" @bind="idSeccion" required>
                           <option value="">-- Seleccione una sección --</option>
                           @foreach (var seccion in secciones)
                           {
                               <option value="@ObtenerValor(seccion, "id")">@ObtenerValor(seccion, "nombre")</option>
                           }
                       </select>
                   </div>
                   <div class="form-group">
                       <label>Subsección</label>
                       <select class="form-control" @bind="idSubseccion" required>
                           <option value="">-- Seleccione una subsección --</option>
                           @foreach (var subseccion in subsecciones)
                           {
                               <option value="@ObtenerValor(subseccion, "id")">@ObtenerValor(subseccion, "nombre")</option>
                           }
                       </select>
                   </div>
               </div>
               <div class="modal-footer">
                   <button type="button" class="btn btn-secondary" @onclick="CerrarModalGuardar">Cancelar</button>
                   <button type="submit" class="btn btn-success">Guardar</button>
               </div>
           </form>
       </div>
   </div>
</div>
}

@if (mostrarModalConsulta)
{
   <div class="modal fade show d-block" style="background: rgba(0, 0, 0, 0.5);">
       <div class="modal-dialog">
           <div class="modal-content">
               <div class="modal-header">
                   <h4 class="modal-title">Consultar Artículo</h4>
                   <button type="button" class="close" @onclick="CerrarModalConsulta">&times;</button>
               </div>
               <div class="modal-body">
                   <div class="form-group">
                       <label>ID</label>
                       <input type="text" class="form-control" @bind="idConsultar" maxlength="20">
                   </div>
                   <div class="form-group">
                       <label>Nombre</label>
                       <input type="text" class="form-control" @bind="nombreConsultar" maxlength="1000">
                   </div>
                   <div class="form-group">
                       <label>Sección</label>
                       <select class="form-control" @bind="idSeccionConsultar">
                           <option value="">-- Todas las secciones --</option>
                           @foreach (var seccion in secciones)
                           {
                               <option value="@ObtenerValor(seccion, "id")">@ObtenerValor(seccion, "nombre")</option>
                           }
                       </select>
                   </div>
                   <div class="form-group">
                       <label>Subsección</label>
                       <select class="form-control" @bind="idSubseccionConsultar">
                           <option value="">-- Todas las subsecciones --</option>
                           @foreach (var subseccion in subsecciones)
                           {
                               <option value="@ObtenerValor(subseccion, "id")">@ObtenerValor(subseccion, "nombre")</option>
                           }
                       </select>
                   </div>
                   <button class="btn btn-primary mt-2" @onclick="ConsultarArticulo">Buscar</button>

                   @if (articuloConsultado != null)
                   {
                       <hr>
                       <div class="form-group">
                           <label>ID</label>
                           <input type="text" class="form-control" value="@ObtenerValor(articuloConsultado, "id")" disabled>
                       </div>
                       <div class="form-group">
                           <label>Nombre</label>
                           <input type="text" class="form-control" value="@ObtenerValor(articuloConsultado, "nombre")" disabled>
                       </div>
                       <div class="form-group">
                           <label>Descripción</label>
                           <textarea class="form-control" rows="4" value="@ObtenerValor(articuloConsultado, "descripcion")" disabled></textarea>
                       </div>
                       <div class="form-group">
                           <label>Sección</label>
                           <input type="text" class="form-control" value="@ObtenerNombreSeccion(articuloConsultado)" disabled>
                       </div>
                       <div class="form-group">
                           <label>Subsección</label>
                           <input type="text" class="form-control" value="@ObtenerNombreSubseccion(articuloConsultado)" disabled>
                       </div>
                   }
               </div>
               <div class="modal-footer">
                   <button type="button" class="btn btn-secondary" @onclick="CerrarModalConsulta">Cerrar</button>
               </div>
           </div>
       </div>
   </div>
}

@code {
   private List<Dictionary<string, object>> articulos = new();
   private List<Dictionary<string, object>> secciones = new();
   private List<Dictionary<string, object>> subsecciones = new();
   private bool cargando = true;
   private bool mostrarModalGuardar = false;
   private bool mostrarModalConsulta = false;

   // Variables para los formularios
   private string idArticulo;
   private string nombreArticulo;
   private string descripcionArticulo;
   private string idSeccion;
   private string idSubseccion;
   
   // Variables para consulta
   private string idConsultar;
   private string nombreConsultar;
   private string idSeccionConsultar;
   private string idSubseccionConsultar;

   private Dictionary<string, object> articuloConsultado;

   protected override async Task OnInitializedAsync()
   {
       await CargarArticulos();
       await CargarSecciones();
       await CargarSubsecciones();
   }

   private async Task CargarArticulos()
   {
       cargando = true;
       try
       {
           articulos = await servicioEntidad.ObtenerTodosAsync("proyecto", "articulo") ?? new();
       }
       catch (Exception ex)
       {
           Console.WriteLine($"Error al cargar artículos: {ex.Message}");
           articulos = new();
       }
       finally
       {
           cargando = false;
       }
   }

   private async Task CargarSecciones()
   {
       try
       {
           secciones = await servicioEntidad.ObtenerTodosAsync("proyecto", "seccion") ?? new();
       }
       catch (Exception ex)
       {
           Console.WriteLine($"Error al cargar secciones: {ex.Message}");
           secciones = new();
       }
   }

   private async Task CargarSubsecciones()
   {
       try
       {
           subsecciones = await servicioEntidad.ObtenerTodosAsync("proyecto", "subseccion") ?? new();
       }
       catch (Exception ex)
       {
           Console.WriteLine($"Error al cargar subsecciones: {ex.Message}");
           subsecciones = new();
       }
   }

   private string ObtenerValor(Dictionary<string, object> diccionario, string clave)
   {
       return diccionario.TryGetValue(clave, out var valor) ? valor?.ToString() ?? "" : "";
   }

   private string ObtenerNombreSeccion(Dictionary<string, object> articulo)
   {
       var idSeccion = ObtenerValor(articulo, "fkidseccion");
       var seccion = secciones.FirstOrDefault(s => 
           ObtenerValor(s, "id") == idSeccion);

       if (seccion != null)
       {
           return $"{ObtenerValor(seccion, "id")} - {ObtenerValor(seccion, "nombre")}";
       }
       return idSeccion;
   }

   private string ObtenerNombreSubseccion(Dictionary<string, object> articulo)
   {
       var idSubseccion = ObtenerValor(articulo, "fkidsubseccion");
       var subseccion = subsecciones.FirstOrDefault(s => 
           ObtenerValor(s, "id") == idSubseccion);

       if (subseccion != null)
       {
           return $"{ObtenerValor(subseccion, "id")} - {ObtenerValor(subseccion, "nombre")}";
       }
       return idSubseccion;
   }

   private void AbrirModalGuardar()
   {
       mostrarModalGuardar = true;
       idArticulo = "";
       nombreArticulo = "";
       descripcionArticulo = "";
       idSeccion = "";
       idSubseccion = "";
   }

   private void CerrarModalGuardar()
   {
       mostrarModalGuardar = false;
   }

   private async Task GuardarArticulo()
   {
       try
       {
           // Crear un nuevo artículo con los campos según la estructura de la tabla
           var nuevoArticulo = new Dictionary<string, object>
           {
               { "id", idArticulo },
               { "nombre", nombreArticulo },
               { "descripcion", descripcionArticulo },
               { "fkidseccion", idSeccion },
               { "fkidsubseccion", idSubseccion }
           };

           var resultado = await servicioEntidad.CrearAsync("proyecto", "articulo", nuevoArticulo);

           if (resultado)
           {
               await CargarArticulos();
               CerrarModalGuardar();
           }
       }
       catch (Exception ex)
       {
           Console.WriteLine($"Error al guardar artículo: {ex.Message}");
       }
   }

   private async Task ConsultarArticulo()
   {
       try
       {
           if (!string.IsNullOrEmpty(idConsultar))
           {
               // Buscar por ID
               var articulo = await servicioEntidad.ObtenerPorClaveAsync("proyecto", "articulo", "id", idConsultar);
               articuloConsultado = articulo;
           }
           else if (!string.IsNullOrEmpty(nombreConsultar))
           {
               // Buscar por nombre
               var articulo = await servicioEntidad.ObtenerPorClaveAsync("proyecto", "articulo", "nombre", nombreConsultar);
               articuloConsultado = articulo;
           }
           else if (!string.IsNullOrEmpty(idSeccionConsultar))
           {
               // Buscar por sección
               var articulo = await servicioEntidad.ObtenerPorClaveAsync("proyecto", "articulo", "fkidseccion", idSeccionConsultar);
               articuloConsultado = articulo;
           }
           else if (!string.IsNullOrEmpty(idSubseccionConsultar))
           {
               // Buscar por subsección
               var articulo = await servicioEntidad.ObtenerPorClaveAsync("proyecto", "articulo", "fkidsubseccion", idSubseccionConsultar);
               articuloConsultado = articulo;
           }
       }
       catch (Exception ex)
       {
           Console.WriteLine($"Error al consultar artículo: {ex.Message}");
           articuloConsultado = null;
       }
   }

   private void CerrarModalConsulta()
   {
       mostrarModalConsulta = false;
       idConsultar = "";
       nombreConsultar = "";
       idSeccionConsultar = "";
       idSubseccionConsultar = "";
       articuloConsultado = null;
   }
}